### YamlMime:ManagedReference
items:
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1
  commentId: T:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1
  id: PolylineEncodingBase`1
  parent: Cloudikka.PolylineAlgorithm.Encoding
  children:
  - Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.CreateResult(System.Double,System.Double)
  - Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Decode(System.String)
  - Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Encode(System.Collections.Generic.IEnumerable{`0})
  - Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.GetCoordinate(`0)
  langs:
  - csharp
  - vb
  name: PolylineEncodingBase<T>
  nameWithType: PolylineEncodingBase<T>
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>
  type: Class
  source:
    remote:
      path: src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: PolylineEncodingBase
    path: ../src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
    startLine: 14
  assemblies:
  - Cloudikka.PolylineAlgorithm
  namespace: Cloudikka.PolylineAlgorithm.Encoding
  summary: "\nDefines base class for all polyline encodings\n"
  example: []
  syntax:
    content: 'public abstract class PolylineEncodingBase<T> : IPolylineEncoding<T>'
    typeParameters:
    - id: T
      description: ''
    content.vb: >-
      Public MustInherit Class PolylineEncodingBase(Of T)
          Implements IPolylineEncoding(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - Cloudikka.PolylineAlgorithm.Encoding.PolylineEncoding
  - Cloudikka.PolylineAlgorithm.Tests.Encoding.PolylineEncodingBaseTest
  implements:
  - Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: PolylineEncodingBase(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T)
  name.vb: PolylineEncodingBase(Of T)
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Decode(System.String)
  commentId: M:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Decode(System.String)
  id: Decode(System.String)
  parent: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1
  langs:
  - csharp
  - vb
  name: Decode(String)
  nameWithType: PolylineEncodingBase<T>.Decode(String)
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>.Decode(System.String)
  type: Method
  source:
    remote:
      path: src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: Decode
    path: ../src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
    startLine: 22
  assemblies:
  - Cloudikka.PolylineAlgorithm
  namespace: Cloudikka.PolylineAlgorithm.Encoding
  summary: "\nMethod performs decode operation and coversion to desired type\n"
  example: []
  syntax:
    content: public IEnumerable<T> Decode(string source)
    parameters:
    - id: source
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Decode(source As String) As IEnumerable(Of T)
  overload: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Decode*
  implements:
  - Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{{T}}.Decode(System.String)
  nameWithType.vb: PolylineEncodingBase(Of T).Decode(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T).Decode(System.String)
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Encode(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Encode(System.Collections.Generic.IEnumerable{`0})
  id: Encode(System.Collections.Generic.IEnumerable{`0})
  parent: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1
  langs:
  - csharp
  - vb
  name: Encode(IEnumerable<T>)
  nameWithType: PolylineEncodingBase<T>.Encode(IEnumerable<T>)
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>.Encode(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: Encode
    path: ../src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
    startLine: 38
  assemblies:
  - Cloudikka.PolylineAlgorithm
  namespace: Cloudikka.PolylineAlgorithm.Encoding
  summary: "\nMethod performs conversion to coordinate tuple and encode operation.\n"
  example: []
  syntax:
    content: public string Encode(IEnumerable<T> source)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Encode(source As IEnumerable(Of T)) As String
  overload: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Encode*
  implements:
  - Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{{T}}.Encode(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: PolylineEncodingBase(Of T).Encode(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T).Encode(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Encode(IEnumerable(Of T))
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.CreateResult(System.Double,System.Double)
  commentId: M:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.CreateResult(System.Double,System.Double)
  id: CreateResult(System.Double,System.Double)
  parent: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1
  langs:
  - csharp
  - vb
  name: CreateResult(Double, Double)
  nameWithType: PolylineEncodingBase<T>.CreateResult(Double, Double)
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>.CreateResult(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: CreateResult
    path: ../src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
    startLine: 54
  assemblies:
  - Cloudikka.PolylineAlgorithm
  namespace: Cloudikka.PolylineAlgorithm.Encoding
  summary: "\nMethod creates <see cref=\"!:T\"></see> result from passed latitude and longitude arguments\n"
  example: []
  syntax:
    content: protected abstract T CreateResult(double latitude, double longitude)
    parameters:
    - id: latitude
      type: System.Double
      description: Latitude value
    - id: longitude
      type: System.Double
      description: Longitude value
    return:
      type: '{T}'
      description: Returns created instance of <see cref="!:T"></see>
    content.vb: Protected MustOverride Function CreateResult(latitude As Double, longitude As Double) As T
  overload: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.CreateResult*
  nameWithType.vb: PolylineEncodingBase(Of T).CreateResult(Double, Double)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T).CreateResult(System.Double, System.Double)
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.GetCoordinate(`0)
  commentId: M:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.GetCoordinate(`0)
  id: GetCoordinate(`0)
  parent: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1
  langs:
  - csharp
  - vb
  name: GetCoordinate(T)
  nameWithType: PolylineEncodingBase<T>.GetCoordinate(T)
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>.GetCoordinate(T)
  type: Method
  source:
    remote:
      path: src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: GetCoordinate
    path: ../src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/Encoding/PolylineEncodingBase.cs
    startLine: 61
  assemblies:
  - Cloudikka.PolylineAlgorithm
  namespace: Cloudikka.PolylineAlgorithm.Encoding
  summary: "\nThe GetCoordinates\n"
  example: []
  syntax:
    content: protected abstract GetCoordinate(T source)
    parameters:
    - id: source
      type: '{T}'
      description: The <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.ValueTuple{System.Double,System.Double}
      description: The <see cref="!:IEnumerable&lt;(double Latitude, double Longitude)>"></see>
    content.vb: 'Protected MustOverride Function GetCoordinate(source As T) As '
  overload: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.GetCoordinate*
  nameWithType.vb: PolylineEncodingBase(Of T).GetCoordinate(T)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T).GetCoordinate(T)
references:
- uid: Cloudikka.PolylineAlgorithm.Encoding
  commentId: N:Cloudikka.PolylineAlgorithm.Encoding
  isExternal: false
  name: Cloudikka.PolylineAlgorithm.Encoding
  nameWithType: Cloudikka.PolylineAlgorithm.Encoding
  fullName: Cloudikka.PolylineAlgorithm.Encoding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{{T}}
  commentId: T:Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{`0}
  parent: Cloudikka.PolylineAlgorithm.Encoding
  definition: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1
  name: IPolylineEncoding<T>
  nameWithType: IPolylineEncoding<T>
  fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>
  nameWithType.vb: IPolylineEncoding(Of T)
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T)
  name.vb: IPolylineEncoding(Of T)
  spec.csharp:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1
    name: IPolylineEncoding
    nameWithType: IPolylineEncoding
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1
    name: IPolylineEncoding
    nameWithType: IPolylineEncoding
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1
  commentId: T:Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1
  isExternal: false
  name: IPolylineEncoding<T>
  nameWithType: IPolylineEncoding<T>
  fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>
  nameWithType.vb: IPolylineEncoding(Of T)
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T)
  name.vb: IPolylineEncoding(Of T)
  spec.csharp:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1
    name: IPolylineEncoding
    nameWithType: IPolylineEncoding
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1
    name: IPolylineEncoding
    nameWithType: IPolylineEncoding
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Decode*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Decode
  isExternal: false
  name: Decode
  nameWithType: PolylineEncodingBase<T>.Decode
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>.Decode
  nameWithType.vb: PolylineEncodingBase(Of T).Decode
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T).Decode
- uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{{T}}.Decode(System.String)
  commentId: M:Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{`0}.Decode(System.String)
  parent: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{{T}}
  definition: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Decode(System.String)
  name: Decode(String)
  nameWithType: IPolylineEncoding<T>.Decode(String)
  fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>.Decode(System.String)
  nameWithType.vb: IPolylineEncoding(Of T).Decode(String)
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T).Decode(System.String)
  spec.csharp:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Decode(System.String)
    name: Decode
    nameWithType: IPolylineEncoding<T>.Decode
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>.Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Decode(System.String)
    name: Decode
    nameWithType: IPolylineEncoding(Of T).Decode
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T).Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Decode(System.String)
  commentId: M:Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Decode(System.String)
  isExternal: true
  name: Decode(String)
  nameWithType: IPolylineEncoding<T>.Decode(String)
  fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>.Decode(System.String)
  nameWithType.vb: IPolylineEncoding(Of T).Decode(String)
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T).Decode(System.String)
  spec.csharp:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Decode(System.String)
    name: Decode
    nameWithType: IPolylineEncoding<T>.Decode
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>.Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Decode(System.String)
    name: Decode
    nameWithType: IPolylineEncoding(Of T).Decode
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T).Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Encode*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.Encode
  isExternal: false
  name: Encode
  nameWithType: PolylineEncodingBase<T>.Encode
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>.Encode
  nameWithType.vb: PolylineEncodingBase(Of T).Encode
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T).Encode
- uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{{T}}.Encode(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{`0}.Encode(System.Collections.Generic.IEnumerable{`0})
  parent: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding{{T}}
  definition: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Encode(System.Collections.Generic.IEnumerable{`0})
  name: Encode(IEnumerable<T>)
  nameWithType: IPolylineEncoding<T>.Encode(IEnumerable<T>)
  fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>.Encode(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IPolylineEncoding(Of T).Encode(IEnumerable(Of T))
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T).Encode(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Encode(IEnumerable(Of T))
  spec.csharp:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Encode(System.Collections.Generic.IEnumerable{`0})
    name: Encode
    nameWithType: IPolylineEncoding<T>.Encode
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>.Encode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Encode(System.Collections.Generic.IEnumerable{`0})
    name: Encode
    nameWithType: IPolylineEncoding(Of T).Encode
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T).Encode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Encode(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Encode(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Encode(IEnumerable<T>)
  nameWithType: IPolylineEncoding<T>.Encode(IEnumerable<T>)
  fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>.Encode(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IPolylineEncoding(Of T).Encode(IEnumerable(Of T))
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T).Encode(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Encode(IEnumerable(Of T))
  spec.csharp:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Encode(System.Collections.Generic.IEnumerable{`0})
    name: Encode
    nameWithType: IPolylineEncoding<T>.Encode
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding<T>.Encode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding`1.Encode(System.Collections.Generic.IEnumerable{`0})
    name: Encode
    nameWithType: IPolylineEncoding(Of T).Encode
    fullName: Cloudikka.PolylineAlgorithm.Encoding.IPolylineEncoding(Of T).Encode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.CreateResult*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.CreateResult
  isExternal: false
  name: CreateResult
  nameWithType: PolylineEncodingBase<T>.CreateResult
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>.CreateResult
  nameWithType.vb: PolylineEncodingBase(Of T).CreateResult
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T).CreateResult
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.GetCoordinate*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase`1.GetCoordinate
  isExternal: false
  name: GetCoordinate
  nameWithType: PolylineEncodingBase<T>.GetCoordinate
  fullName: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase<T>.GetCoordinate
  nameWithType.vb: PolylineEncodingBase(Of T).GetCoordinate
  fullName.vb: Cloudikka.PolylineAlgorithm.Encoding.PolylineEncodingBase(Of T).GetCoordinate
- uid: System.ValueTuple{System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double}
  parent: System
  isExternal: false
  name: ''
  nameWithType: ''
  fullName: System.
