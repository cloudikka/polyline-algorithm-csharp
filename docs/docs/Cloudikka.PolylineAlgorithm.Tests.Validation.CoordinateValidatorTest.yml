### YamlMime:ManagedReference
items:
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  commentId: T:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  id: CoordinateValidatorTest
  parent: Cloudikka.PolylineAlgorithm.Tests.Validation
  children:
  - Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_InvalidInput_IsFalse
  - Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_ValidInput_IsTrue
  - Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse
  - Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue
  - Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse
  - Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue
  langs:
  - csharp
  - vb
  name: CoordinateValidatorTest
  nameWithType: CoordinateValidatorTest
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  type: Class
  source:
    remote:
      path: tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: CoordinateValidatorTest
    path: ../tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
    startLine: 12
  assemblies:
  - Cloudikka.PolylineAlgorithm.Tests
  namespace: Cloudikka.PolylineAlgorithm.Tests.Validation
  summary: "\nDefines the <xref href=\"Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [TestClass]

      [TestCategory("CoordinateValidator")]

      public class CoordinateValidatorTest
    content.vb: >-
      <TestClass>

      <TestCategory("CoordinateValidator")>

      Public Class CoordinateValidatorTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CoordinateValidator
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_InvalidInput_IsFalse
  commentId: M:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_InvalidInput_IsFalse
  id: IsValid_InvalidInput_IsFalse
  parent: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  langs:
  - csharp
  - vb
  name: IsValid_InvalidInput_IsFalse()
  nameWithType: CoordinateValidatorTest.IsValid_InvalidInput_IsFalse()
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_InvalidInput_IsFalse()
  type: Method
  source:
    remote:
      path: tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: IsValid_InvalidInput_IsFalse
    path: ../tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
    startLine: 20
  assemblies:
  - Cloudikka.PolylineAlgorithm.Tests
  namespace: Cloudikka.PolylineAlgorithm.Tests.Validation
  summary: "\nThe IsValid_InvalidInput\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void IsValid_InvalidInput_IsFalse()
    content.vb: >-
      <TestMethod>

      Public Sub IsValid_InvalidInput_IsFalse
  overload: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_InvalidInput_IsFalse*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_ValidInput_IsTrue
  commentId: M:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_ValidInput_IsTrue
  id: IsValid_ValidInput_IsTrue
  parent: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  langs:
  - csharp
  - vb
  name: IsValid_ValidInput_IsTrue()
  nameWithType: CoordinateValidatorTest.IsValid_ValidInput_IsTrue()
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_ValidInput_IsTrue()
  type: Method
  source:
    remote:
      path: tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: IsValid_ValidInput_IsTrue
    path: ../tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
    startLine: 37
  assemblies:
  - Cloudikka.PolylineAlgorithm.Tests
  namespace: Cloudikka.PolylineAlgorithm.Tests.Validation
  summary: "\nThe IsValid_ValidInput\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void IsValid_ValidInput_IsTrue()
    content.vb: >-
      <TestMethod>

      Public Sub IsValid_ValidInput_IsTrue
  overload: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_ValidInput_IsTrue*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse
  commentId: M:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse
  id: IsValidLatitude_InvalidInput_IsFalse
  parent: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  langs:
  - csharp
  - vb
  name: IsValidLatitude_InvalidInput_IsFalse()
  nameWithType: CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse()
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse()
  type: Method
  source:
    remote:
      path: tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: IsValidLatitude_InvalidInput_IsFalse
    path: ../tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
    startLine: 54
  assemblies:
  - Cloudikka.PolylineAlgorithm.Tests
  namespace: Cloudikka.PolylineAlgorithm.Tests.Validation
  summary: "\nThe IsValidLatitude_InvalidInput\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void IsValidLatitude_InvalidInput_IsFalse()
    content.vb: >-
      <TestMethod>

      Public Sub IsValidLatitude_InvalidInput_IsFalse
  overload: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue
  commentId: M:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue
  id: IsValidLatitude_ValidInput_IsTrue
  parent: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  langs:
  - csharp
  - vb
  name: IsValidLatitude_ValidInput_IsTrue()
  nameWithType: CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue()
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue()
  type: Method
  source:
    remote:
      path: tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: IsValidLatitude_ValidInput_IsTrue
    path: ../tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
    startLine: 71
  assemblies:
  - Cloudikka.PolylineAlgorithm.Tests
  namespace: Cloudikka.PolylineAlgorithm.Tests.Validation
  summary: "\nThe IsValidLatitude_ValidInput\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void IsValidLatitude_ValidInput_IsTrue()
    content.vb: >-
      <TestMethod>

      Public Sub IsValidLatitude_ValidInput_IsTrue
  overload: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse
  commentId: M:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse
  id: IsValidLongitude_InvalidInput_IsFalse
  parent: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  langs:
  - csharp
  - vb
  name: IsValidLongitude_InvalidInput_IsFalse()
  nameWithType: CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse()
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse()
  type: Method
  source:
    remote:
      path: tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: IsValidLongitude_InvalidInput_IsFalse
    path: ../tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
    startLine: 88
  assemblies:
  - Cloudikka.PolylineAlgorithm.Tests
  namespace: Cloudikka.PolylineAlgorithm.Tests.Validation
  summary: "\nThe IsValidLongitude_InvalidInput\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void IsValidLongitude_InvalidInput_IsFalse()
    content.vb: >-
      <TestMethod>

      Public Sub IsValidLongitude_InvalidInput_IsFalse
  overload: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue
  commentId: M:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue
  id: IsValidLongitude_ValidInput_IsTrue
  parent: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  langs:
  - csharp
  - vb
  name: IsValidLongitude_ValidInput_IsTrue()
  nameWithType: CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue()
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue()
  type: Method
  source:
    remote:
      path: tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: IsValidLongitude_ValidInput_IsTrue
    path: ../tests/Cloudikka.PolylineAlgorithm.Tests/Validation/CoordinateValidatorTest.cs
    startLine: 105
  assemblies:
  - Cloudikka.PolylineAlgorithm.Tests
  namespace: Cloudikka.PolylineAlgorithm.Tests.Validation
  summary: "\nThe IsValidLongitude_ValidInput\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void IsValidLongitude_ValidInput_IsTrue()
    content.vb: >-
      <TestMethod>

      Public Sub IsValidLongitude_ValidInput_IsTrue
  overload: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  commentId: T:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
  isExternal: false
  name: CoordinateValidatorTest
  nameWithType: CoordinateValidatorTest
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation
  commentId: N:Cloudikka.PolylineAlgorithm.Tests.Validation
  isExternal: false
  name: Cloudikka.PolylineAlgorithm.Tests.Validation
  nameWithType: Cloudikka.PolylineAlgorithm.Tests.Validation
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_InvalidInput_IsFalse*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_InvalidInput_IsFalse
  isExternal: false
  name: IsValid_InvalidInput_IsFalse
  nameWithType: CoordinateValidatorTest.IsValid_InvalidInput_IsFalse
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_InvalidInput_IsFalse
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_ValidInput_IsTrue*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_ValidInput_IsTrue
  isExternal: false
  name: IsValid_ValidInput_IsTrue
  nameWithType: CoordinateValidatorTest.IsValid_ValidInput_IsTrue
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValid_ValidInput_IsTrue
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse
  isExternal: false
  name: IsValidLatitude_InvalidInput_IsFalse
  nameWithType: CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_InvalidInput_IsFalse
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue
  isExternal: false
  name: IsValidLatitude_ValidInput_IsTrue
  nameWithType: CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLatitude_ValidInput_IsTrue
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse
  isExternal: false
  name: IsValidLongitude_InvalidInput_IsFalse
  nameWithType: CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_InvalidInput_IsFalse
- uid: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue*
  commentId: Overload:Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue
  isExternal: false
  name: IsValidLongitude_ValidInput_IsTrue
  nameWithType: CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue
  fullName: Cloudikka.PolylineAlgorithm.Tests.Validation.CoordinateValidatorTest.IsValidLongitude_ValidInput_IsTrue
