### YamlMime:ManagedReference
items:
- uid: Cloudikka.PolylineAlgorithm.PolylineAlgorithm
  commentId: T:Cloudikka.PolylineAlgorithm.PolylineAlgorithm
  id: PolylineAlgorithm
  parent: Cloudikka.PolylineAlgorithm
  children:
  - Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode(System.Char[])
  - Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})
  langs:
  - csharp
  - vb
  name: PolylineAlgorithm
  nameWithType: PolylineAlgorithm
  fullName: Cloudikka.PolylineAlgorithm.PolylineAlgorithm
  type: Class
  source:
    remote:
      path: src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/PolylineAlgorithm.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: PolylineAlgorithm
    path: ../src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/PolylineAlgorithm.cs
    startLine: 15
  assemblies:
  - Cloudikka.PolylineAlgorithm
  namespace: Cloudikka.PolylineAlgorithm
  summary: "\nPerforms polyline algorithm decoding and encoding\n"
  example: []
  syntax:
    content: public static class PolylineAlgorithm
    content.vb: Public Module PolylineAlgorithm
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode(System.Char[])
  commentId: M:Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode(System.Char[])
  id: Decode(System.Char[])
  parent: Cloudikka.PolylineAlgorithm.PolylineAlgorithm
  langs:
  - csharp
  - vb
  name: Decode(Char[])
  nameWithType: PolylineAlgorithm.Decode(Char[])
  fullName: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode(System.Char[])
  type: Method
  source:
    remote:
      path: src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/PolylineAlgorithm.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: Decode
    path: ../src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/PolylineAlgorithm.cs
    startLine: 25
  assemblies:
  - Cloudikka.PolylineAlgorithm
  namespace: Cloudikka.PolylineAlgorithm
  summary: "\nMethod decodes polyline encoded representation to coordinates.\n"
  example: []
  syntax:
    content: public static IEnumerable<> Decode(char[] polyline)
    parameters:
    - id: polyline
      type: System.Char[]
      description: Encoded polyline char array to decode
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}}
      description: Returns coordinates.
    content.vb: Public Shared Function Decode(polyline As Char()) As IEnumerable(Of )
  overload: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If polyline argument is null -or- empty char array.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: If polyline representation is not in correct format.
  nameWithType.vb: PolylineAlgorithm.Decode(Char())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode(System.Char())
  name.vb: Decode(Char())
- uid: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})
  commentId: M:Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})
  id: Encode(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}})
  parent: Cloudikka.PolylineAlgorithm.PolylineAlgorithm
  langs:
  - csharp
  - vb
  name: Encode(IEnumerable<>)
  nameWithType: PolylineAlgorithm.Encode(IEnumerable<>)
  fullName: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode(System.Collections.Generic.IEnumerable<System.>)
  type: Method
  source:
    remote:
      path: src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/PolylineAlgorithm.cs
      branch: alpha
      repo: https://github.com/cloudikka/polyline-algorithm-csharp.git
    id: Encode
    path: ../src/Cloudikka.PolylineAlgorithm/Cloudikka.PolylineAlgorithm/PolylineAlgorithm.cs
    startLine: 68
  assemblies:
  - Cloudikka.PolylineAlgorithm
  namespace: Cloudikka.PolylineAlgorithm
  summary: "\nMethod encodes coordinates to polyline encoded representation\n"
  example: []
  syntax:
    content: public static string Encode(IEnumerable<> coordinates)
    parameters:
    - id: coordinates
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}}
      description: Coordinates to encode
    return:
      type: System.String
      description: Polyline encoded representation
    content.vb: Public Shared Function Encode(coordinates As IEnumerable(Of )) As String
  overload: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If coordinates parameter is null or empty enumerable
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: If one or more coordinate is out of range
  nameWithType.vb: PolylineAlgorithm.Encode(IEnumerable(Of ))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode(System.Collections.Generic.IEnumerable(Of System.))
  name.vb: Encode(IEnumerable(Of ))
references:
- uid: Cloudikka.PolylineAlgorithm
  commentId: N:Cloudikka.PolylineAlgorithm
  isExternal: false
  name: Cloudikka.PolylineAlgorithm
  nameWithType: Cloudikka.PolylineAlgorithm
  fullName: Cloudikka.PolylineAlgorithm
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode*
  commentId: Overload:Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode
  isExternal: false
  name: Decode
  nameWithType: PolylineAlgorithm.Decode
  fullName: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Decode
- uid: System.Char[]
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Double,System.Double}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<System.>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.)
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple{System.Double,System.Double}
    name: ''
    nameWithType: ''
    fullName: System.
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple{System.Double,System.Double}
    name: ''
    nameWithType: ''
    fullName: System.
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.AggregateException
  commentId: T:System.AggregateException
- uid: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode*
  commentId: Overload:Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode
  isExternal: false
  name: Encode
  nameWithType: PolylineAlgorithm.Encode
  fullName: Cloudikka.PolylineAlgorithm.PolylineAlgorithm.Encode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
